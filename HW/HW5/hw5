Problem 1: 
  1. T(N) = 2T(N-1) + 1
    Recursion Tree:
      T(N) = 2T(N-1) + 1
      = 2[2T(N-2) + 1] + 1
      = 2^2T(N-2) + 2 + 1
      = 2^3T(N-3) + 2^2 + 2 + 1
      = 2^4T(N-4) + 2^3 + 2^2 + 2 + 1
      = 2^kT(N-k) + 2^k-1 + 2^k-2 +...+ 2^2 + 2 + 1
      N - k = 0 so N = k
      = 2^nT(0) + 2^n-1 + 2^n-2 +...+ 2^2 + 2 + 1
      = 2^n*1 + 2^n - 1
      = 2^n + 2^n - 1
      = 2^n+1 - 1
      = O(2^n)
    
  2. 3T(N-1) + n
      Recursion Tree:
        T(N) = 3T(N-1) + n
        = 3[3T(N-2) + (n-1)] + n
        = 3^2T(N-2) + (n-1) + n
        = 3^2[3T(N-3) + (n-2)] + (n-1) + n
        = 3^3T(N-3) + (n-2) + (n-1) + n
        = 3^kT(N-k) + (n-(k-1)) + (n-(k-2)) +...+ (n-1) + n
        N - k = 0 so N = k
        = 3^nT(0) + 1 + 2 +...+ (n-1) + n
        = 3^n*1 + (n(n+1))/2
        =
